function createDataset(fields, constraints, sortFields) {	var activeConstraint = DatasetFactory.createConstraint("metadata#active", "true", "true", ConstraintType.MUST);		this.getPAFromOcorrencia = function(cdOcorrencia){		var ocorrenciaConstraint = DatasetFactory.createConstraint("cdOcorrencia", cdOcorrencia, cdOcorrencia, ConstraintType.MUST);			var constraintsPA = new Array(activeConstraint, ocorrenciaConstraint);		var datasetPA = DatasetFactory.getDataset("ecm_kgq_pa", null, constraintsPA, null);				log.info("datasetPA " + datasetPA.getRowsCount());				return datasetPA;			};		this.getAtividadesFromPA = function(cdPlanoAcao){		var planoAcaoConstraint = DatasetFactory.createConstraint("cdPlanoAcao", cdPlanoAcao, cdPlanoAcao, ConstraintType.MUST);			var constraintsAtividade = new Array(activeConstraint, planoAcaoConstraint);		var datasetAtividades = DatasetFactory.getDataset("ecm_kgq_atividadepa", null, constraintsAtividade, null);				log.info("datasetAtividades " + datasetAtividades.getRowsCount());				return datasetAtividades;	};		this.createOcorrenciaDataset = function(){		var arrayConstraint = new Array(activeConstraint);		constraints = constraints.concat(arrayConstraint);		log.info(">>> constraints " + java.util.Arrays.asList(constraints));				var datasetOcorrencias = DatasetFactory.getDataset("ecm_kgq_ro", null, constraints, null);					var analiseDataset = DatasetBuilder.newDataset();		//dados da ocorrencia		analiseDataset.addColumn("cdOcorrencia");		analiseDataset.addColumn("dsOcorrencia");		analiseDataset.addColumn("statusOcorrencia");		analiseDataset.addColumn("dtRegistro");				analiseDataset.addColumn("dtOcorrencia");		analiseDataset.addColumn("nmTipoAcao");		analiseDataset.addColumn("nmTipoOcorrencia");		analiseDataset.addColumn("nmArea");		analiseDataset.addColumn("nmOrigem");		analiseDataset.addColumn("nmCriticidade");		analiseDataset.addColumn("fgContencao");		analiseDataset.addColumn("fgOcorrenciaReincidente");		analiseDataset.addColumn("cdOcorrenciaReincidente");		analiseDataset.addColumn("dsContencao");		analiseDataset.addColumn("dsAnaliseCausa");		analiseDataset.addColumn("dsAcoesExecutadas");		analiseDataset.addColumn("dsEficacia");		//dados do plano de acao		analiseDataset.addColumn("cdPlanoAcao");		analiseDataset.addColumn("nmResponsavelPA");		analiseDataset.addColumn("nmDataPA");			analiseDataset.addColumn("nmAssunto");		analiseDataset.addColumn("nmParticipantes");		analiseDataset.addColumn("nmPauta");		analiseDataset.addColumn("nmDefinicoes");		analiseDataset.addColumn("statusPA");				//dados da atividade do plano		analiseDataset.addColumn("cdAtividadePA");		analiseDataset.addColumn("nmOquCom");		analiseDataset.addColumn("nmResponsavelAtividade");		analiseDataset.addColumn("nmPrazoDeConclusao");		analiseDataset.addColumn("dsAtividade");		analiseDataset.addColumn("statusAtividade");				for(var i=0; i<datasetOcorrencias.getRowsCount(); i++){			//dados da ocorrencia			var cdOcorrencia = datasetOcorrencias.getValue(i, "cdOcorrencia");			var dsOcorrencia = datasetOcorrencias.getValue(i, "dsOcorrencia");			var statusOcorrencia = datasetOcorrencias.getValue(i, "state");			var dtRegistro = datasetOcorrencias.getValue(i, "dtRegistro");			var dtOcorrencia = datasetOcorrencias.getValue(i, "dtOcorrencia");			var nmTipoAcao = datasetOcorrencias.getValue(i, "nmTipoAcao");			var nmTipoOcorrencia = datasetOcorrencias.getValue(i, "nmTipoOcorrencia");			var nmArea = datasetOcorrencias.getValue(i, "nmArea");			var nmOrigem = datasetOcorrencias.getValue(i, "nmOrigem");			var nmCriticidade = datasetOcorrencias.getValue(i, "nmCriticidade");			var fgContencao = datasetOcorrencias.getValue(i, "fgContencao");			var fgOcorrenciaReincidente = datasetOcorrencias.getValue(i, "fgOcorrenciaReincidente");			var cdOcorrenciaReincidente = datasetOcorrencias.getValue(i, "cdOcorrenciaReincidente");			var dsContencao = datasetOcorrencias.getValue(i, "dsContencao");			var dsAnaliseCausa = datasetOcorrencias.getValue(i, "dsAnaliseCausa");			var dsAcoesExecutadas = datasetOcorrencias.getValue(i, "dsAcoesExecutadas");			var dsEficacia = datasetOcorrencias.getValue(i, "dsEficacia");						//dados do plano de acao						var cdPlanoAcao = "";			var nmResponsavelPA = "";			var nmDataPA = "";			var nmAssunto = "";			var nmParticipantes = "";			var nmPauta = "";			var nmDefinicoes = "";			var statusPA = "";						//dados da atividade do plano									var cdAtividadePA = "";			var nmOquCom = "";			var nmResponsavelAtividade = "";			var nmPrazoDeConclusao = "";			var dsAtividade = "";			var statusAtividade = "";						log.info("cdOcorrencia " + cdOcorrencia);						var datasetPA = this.getPAFromOcorrencia(cdOcorrencia);			log.info("datasetPA.getColumnsName(): " + java.util.Arrays.asList(datasetPA.getColumnsName()));						if(datasetPA.getRowsCount()>0){				for(var j=0; j<datasetPA.getRowsCount(); j++){					cdPlanoAcao = datasetPA.getValue(j, "cdPlanoAcao");					nmResponsavelPA = datasetPA.getValue(j, "nmResponsavelPA");					nmDataPA = datasetPA.getValue(j, "nmDataPA");					nmAssunto = datasetPA.getValue(j, "nmAssunto");					nmParticipantes = datasetPA.getValue(j, "nmParticipantes");					nmPauta = datasetPA.getValue(j, "nmPauta");					nmDefinicoes = datasetPA.getValue(j, "nmDefinicoes");					statusPA = datasetPA.getValue(j, "state");										log.info("cdPlanoAcao " + cdPlanoAcao);										var datasetAtividades = this.getAtividadesFromPA(cdPlanoAcao);					log.info("datasetAtividades.getColumnsName(): " + java.util.Arrays.asList(datasetAtividades.getColumnsName()));															if(datasetAtividades.getRowsCount()>0){						for(var k=0; k < datasetAtividades.getRowsCount(); k++){							cdAtividadePA = datasetAtividades.getValue(k, "cdAtividadePA");							nmOquCom = datasetAtividades.getValue(k, "nmOquCom");							nmResponsavelAtividade = datasetAtividades.getValue(k, "nmResponsavel");							nmPrazoDeConclusao = datasetAtividades.getValue(k, "nmPrazoDeConclusao");							dsAtividade = datasetAtividades.getValue(k, "dsAtividade");							statusAtividade = datasetAtividades.getValue(k, "state");														var dadosAnalise = new Array(cdOcorrencia, dsOcorrencia, statusOcorrencia, dtRegistro, dtOcorrencia, nmTipoAcao, nmTipoOcorrencia, nmArea, nmOrigem,									nmCriticidade, fgContencao, fgOcorrenciaReincidente, cdOcorrenciaReincidente, dsContencao, dsAnaliseCausa, dsAcoesExecutadas, dsEficacia,									cdPlanoAcao, nmResponsavelPA, nmDataPA, nmAssunto, nmParticipantes, nmPauta, nmDefinicoes, statusPA, 									cdAtividadePA, nmOquCom, nmResponsavelAtividade, nmPrazoDeConclusao, dsAtividade, statusAtividade);							analiseDataset.addRow(dadosAnalise);						}					}else{						var dadosAnalise = new Array(cdOcorrencia, dsOcorrencia, statusOcorrencia, dtRegistro, dtOcorrencia, nmTipoAcao, nmTipoOcorrencia, nmArea, nmOrigem,								nmCriticidade, fgContencao, fgOcorrenciaReincidente, cdOcorrenciaReincidente, dsContencao, dsAnaliseCausa, dsAcoesExecutadas, dsEficacia,								cdPlanoAcao, nmResponsavelPA, nmDataPA, nmAssunto, nmParticipantes, nmPauta, nmDefinicoes, statusPA, 								cdAtividadePA, nmOquCom, nmResponsavelAtividade, nmPrazoDeConclusao, dsAtividade, statusAtividade);						analiseDataset.addRow(dadosAnalise);					}				}			}else{				var dadosAnalise = new Array(cdOcorrencia, dsOcorrencia, statusOcorrencia, dtRegistro, dtOcorrencia, nmTipoAcao, nmTipoOcorrencia, nmArea, nmOrigem,						nmCriticidade, fgContencao, fgOcorrenciaReincidente, cdOcorrenciaReincidente, dsContencao, dsAnaliseCausa, dsAcoesExecutadas, dsEficacia,						cdPlanoAcao, nmResponsavelPA, nmDataPA, nmAssunto, nmParticipantes, nmPauta, nmDefinicoes, statusPA, 						cdAtividadePA, nmOquCom, nmResponsavelAtividade, nmPrazoDeConclusao, dsAtividade, statusAtividade);				analiseDataset.addRow(dadosAnalise);			}		}			return analiseDataset;	};	return this.createOcorrenciaDataset();}